const Koa = require('koa');

const app = new Koa(); // 应用对象程序
// 为保证所有中间件都能够按照洋葱模型来执行，必须要把所有的中间件函数加上async，有next的话，加await
// 定义一个中间件，本质上就是定义一个函数，然后让应用程序对象去调用这个函数；node框架中一般都有next();这个指代下一个中间件函数
// 大概机制是先获取所有中间件函数，然后按照顺序push到数组中，然后依次调用，没有next()立即停止整个进程

// 此处打印顺序为1,3,4,2;

// 洋葱模型

/*
*   ！！！！ 所有中间件函数都要用async/await，确保所有中间件函数按照洋葱模型来执行 ！！！！
* */
// 中间件本身是会返回一个Promise对象；
/*app.use((ctx, next) => {
    console.log(1);
    next();
    console.log(2)
});
app.use((ctx, next) => {
    console.log(3);
    next();
    console.log(4);
    return 'hello' // 中间件函数，
});*/

app.use(async (ctx, next) => {
    // console.log(3);
    const axios = require('axios');
    const start = Date.now();
    // console.log(start);
    const res = await axios.get('https://baidu.com');
    const end = Date.now();
    console.log('耗时：', end - start);
    console.log(res);
    // console.log(4)
});

app.listen(3000);